name: "Spack Container Action"
description: "Build and release a container with spack packages."
inputs:
  package:
    description: the name of the package to install (if no spack.yaml provided)
    required: false
  spack_yaml:
    description: Instead of a package name, install from a spack.yaml instead
    required: false
  branch:
    description: The branch of spack to use to run containerize (defaults to develop)
    required: false
    default: develop
  release:
    description: A spack release to use to run containerize (if defined, overrides branch)
    required: false
    default: ""
  token:
    description: A GitHub token required if releasing containers to the same repository
    required: true
  tag:
    description: An extra tag to give the package (defaults to latest and always GitHub sha)
    required: false
    default: latest
  deploy:
    description: Deploy (release) container to GitHub packages (token is required)
    required: true
    default: false

outputs:
  container:
    description: "Container unique resource identifier (sans tag)"
    value: ${{ steps.release.outputs.container }}
  tag:
    description: "Container custom tag"
    value: ${{ steps.release.outputs.tag }}
  commit:
    description: "Container commit (also a tag)"
    value: ${{ steps.release.outputs.commit }}

runs:
  using: "composite"
  steps:
    - name: Set Root Directory
      env:
        ACTION_PATH: ${{ github.action_path }}
      run: ${{ github.action_path }}/scripts/set_root.sh
      shell: bash

    - name: Install Spack and Dependencies
      env:
        INPUT_BRANCH: ${{ inputs.branch }}
        INPUT_RELEASE: ${{ inputs.release }}
        INPUT_REPOS: ${{ inputs.repos }}
        INPUT_ROOT: /opt/spack
      run: ${{ env.ACTION_ROOT }}/install/scripts/install.sh
      shell: bash

    - name: Build Container
      id: build
      env:
        INPUT_PACKAGE_NAME: ${{ inputs.package }}
        INPUT_SPACK_YAML: ${{ inputs.spack_yaml }}
        INPUT_TAG: ${{ inputs.tag }}
        SPACK_ROOT: /opt/spack

      run: ${{ github.action_path }}/scripts/build.sh
      shell: bash

    - name: Package Release
      if: ${{ inputs.deploy == 'true' }}
      id: release
      env:
        INPUT_PACKAGE_NAME: ${{ inputs.package }}
        GITHUB_TOKEN: ${{ inputs.token }}
        GITHUB_ACTOR: ${{ github.actor }}
        INPUT_TAG: ${{ inputs.tag }}
        SPACK_ROOT: /opt/spack

      run: ${{ github.action_path }}/scripts/release.sh
      shell: bash
